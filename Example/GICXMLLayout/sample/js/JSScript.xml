<page title="JSScript">
    <style path="style/CommonStyle.xml" />
    <scroll-view background-color="white">
        <inset-panel inset="10">
            <stack-panel>
                <template-ref t-name="desc" data-context="iOS9.0及以上系统才支持es6规范,考虑到有些设备还是8.0及以下，示例中的JS代码不会使用es6规范"/>
                <template-ref t-name="title" data-context="直接访问属性、设置属性"/>
                <lable>
                    <behaviors>
                        <script private="1">
                            $el.text = '我是通过js设置的文本';
                            $el.fontColor = '999999';
                            $el.fontSize = 18;
                        </script>
                    </behaviors>
                </lable>


                <template-ref t-name="title" data-context="数据绑定"/>
                <lable text="{{text}}" font-size="{{fontSize}}" font-color="{{fontColor}}">
                    <behaviors>
                        <script private="1">
                            $el.dataContext = {text:'我是通过数据源绑定的',fontSize:20,fontColor:'red'}
                        </script>
                    </behaviors>
                </lable>

                <template-ref t-name="title" data-context="数据绑定-双向绑定"/>
                <stack-panel>
                    <behaviors>
                        <script private="1">
                            $el.dataContext = {name:''}
                        </script>
                    </behaviors>
                    <input font-color="blue" font-size="16" border-color="black" border-width="0.5" text="{{ exp=name,mode=2}}" placehold="请输入用户名" placehold-color="red" placehold-size="16" height="31">
                    </input>
                    <lable text="{{exp='您的用户名：'+name,mode=1}}"/>
                </stack-panel>

                <template-ref t-name="title" data-context="数据绑定-for指令遍历object"/>
                <stack-panel is-horizon="1" space="10" wrap="1">
                    <behaviors>
                        <script private="1">
                            $el.dataContext = {k1:'v1',k2:'v2',k3:'v3'};
                        </script>
                    </behaviors>
                    <for>
                        <inset-panel inset="10" background-color="black">
                            <lable text="{{ $k +'='+ $v}}" font-color="white" font-size="14"/>
                        </inset-panel>
                    </for>
                </stack-panel>


                <!--在事件中-->
                <template-ref t-name="title" data-context="绑定事件(1)直接赋值"/>
                <lable text="点我改变文字" font-size="18" event-tap="js:$el.text = '已经点击了';"/>

                <template-ref t-name="title" data-context="绑定事件(2)调用方法(全局方法)"/>
                <lable text="点我改变颜色" font-size="18" event-tap="js:changeColor($el);">
                    <behaviors>
                        <!--注意这里没有设置private属性,意味着方法可以全局访问-->
                        <script>
                            changeColor = function(el){
                                var r = parseInt(Math.random()*255+1,10);
                                var g = parseInt(Math.random()*255+1,10);
                                var b = parseInt(Math.random()*255+1,10);
                                el.fontColor = r.toString(16) + g.toString(16) + b.toString(16);
                            }
                        </script>
                    </behaviors>
                </lable>

                <template-ref t-name="title" data-context="绑定事件(3)通过js绑定onclick事件"/>
                <lable text="点我改变颜色(onclick事件绑定的)" font-size="18">
                    <behaviors>
                        <!--js直接绑定的事件当前仅支持onclick事件-->
                        <script private="1">
                            $el.onclick = function(){
                                var r = parseInt(Math.random()*255+1,10);
                                var g = parseInt(Math.random()*255+1,10);
                                var b = parseInt(Math.random()*255+1,10);
                                $el.fontColor = r.toString(16) + g.toString(16) + b.toString(16);
                            };
                        </script>
                    </behaviors>
                </lable>
            </stack-panel>
        </inset-panel>
    </scroll-view>
</page>

